# frozen_string_literal: true

require_relative '../repair_droid'

RSpec.describe RepairDroid do
  let :droid { described_class.new(program) }

  context 'with the example world' do
    # TODO: easier testing with a mock controller?
    let :program { ['3', '1033', # input
                    '1008', '1033', '1', '1032',
                    '1005', '1032', '31',
                    '1008', '1033', '2', '1032',
                    '1005', '1032', '58',
                    '1008', '1033', '3', '1032',
                    '1005', '1032', '81',
                    '1008', '1033', '4', '1032',
                    '1005', '1032', '104',
                    '99',
                    # 31: try north
                    '101', '0', '1034', '1039',   # new_x = x
                    '102', '1', '1036', '1041',   # *1041 = *1036
                    '1001', '1035', '-1', '1040', # new_y = y - 1
                    '1008', '1038', '0', '1043',  # *1043 = *1038.zero?
                    '102', '-1', '1043', '1032',  # *1032 = -1 x *1043
                    '1', '1037', '1032', '1042',  # *1042 = *1037 + *1032
                    '1106', '0', '124', # goto 124
                    # 58: try south
                    '101', '0', '1034', '1039',   # new_x = x
                    '101', '0', '1036', '1041',   # *1041 = *1036
                    '1001', '1035', '1', '1040',  # new_y = y + 1
                    '1008', '1038', '0', '1043',  # *1043 = *1038.zero?
                    '1', '1037', '1038', '1042',  # *1042 = *1037 + *1038
                    '1105', '1', '124', # goto 124
                    # 81: try west
                    '1001', '1034', '-1', '1039', # new_x = x - 1
                    '1008', '1036', '0', '1041',  # *1041 = *1036.zero?
                    '1002', '1035', '1', '1040',  # new_y = y
                    '1001', '1038', '0', '1043',  # *1043 = *1038
                    '1001', '1037', '0', '1042',  # *1042 = *1037
                    '1106', '0', '124', # goto 124
                    # 104: try east
                    '1001', '1034', '1', '1039',  # new_x = x + 1
                    '1008', '1036', '0', '1041',  # *1041 = *1036.zero?
                    '102', '1', '1035', '1040',   # new_y = y
                    '1002', '1038', '1', '1043',  # *1043 = *1038
                    '102', '1', '1037', '1042',   # *1042 = *1037
                    # 124: check what happens at the new position
                    '1006', '1039', '217', # goto 217 if new_x.zero?
                    '1006', '1040', '217', # goto 217 if new_y.zero?
                    '1008', '1039', '40', '1032',
                    '1005', '1032', '217', # goto 217 if new_x == 40
                    '1008', '1040', '40', '1032',
                    '1005', '1032', '217', # goto 217 if new_y == 40
                    '1008', '1039', '17', '1032', # NOTE: moved oxy to x=17
                    '1006', '1032', '165', # goto 165 unless new_x == 9 (oxygen x)
                    '1008', '1040', '21', '1032', # NOTE: moved oxy to x=21
                    '1006', '1032', '165', # goto 165 unless new_y == 33 (oxygen y)
                    '1101', '2', '0', '1044', # output = 2
                    '1106', '0', '224', # goto 224
                    # 165: not at oxygen system
                    '2', '1041', '1043', '1032', # temp = *1041 x *1043
                    '1006', '1032', '179',    # goto 179 unless temp
                    '1102', '1', '1', '1044', # output = 1
                    '1106', '0', '224', # goto 224
                    # 179: decipher the map data?
                    '1', '1041', '1043', '1032', # temp = *1041 + *1043
                    '1006', '1032', '217',       # goto 217 if temp.zero?
                    '1', '1042', '1043', '1032', # temp = *1042 + *1043
                    '1001', '1032', '-1', '1032',# temp -= 1
                    '1002', '1032', '39', '1032',# temp *= 39
                    '1', '1032', '1039', '1032', # temp += new_x
                    '101', '-1', '1032', '1032', # temp -= 1
                    '101', '252', '1032', '211', # temp2 = 252 + temp (data after 252?)
                    '1007', '0', '53', '1044', # (temp2 = 0) output = temp2 < 53
                    '1106', '0', '224', # goto 224
                    # 217: output no movement
                    '1101', '0', '0', '1044', # output = 0
                    '1106', '0', '224', # goto 224 (why?)
                    # 224: output with movement
                    '1006', '1044', '247', # goto 247 unless movement
                    # move
                    '1001', '1039', '0', '1034', # *1034 = *1039 + 0
                    '101', '0', '1040', '1035',  # *1035 = 0 + *1040
                    '102', '1', '1041', '1036',  # *1036 = 1 x *1041
                    '101', '0', '1043', '1038',  # *1038 = 0 + *1043
                    '101', '0', '1042', '1037',  # *1037 = 0 + *1042
                    # 247
                    '4', '1044', # puts output
                    '1105', '1', '0', # goto 0
                    # 252: data
                    64,32,22,30,60, 6,82,30,34,77, 7,15,17,32,43,96,
                    51,43,27,74,39,14,10,70,32,20,59,35,98, 3,81,47,
                    40,23,65,16, 1,82,35,35,44,76,93,55, 6,40,65,15,
                    62,62,67, 7,72,21,92,85,54,71,42,84,80,30,64,88,
                    50,90,16,34,63,20,88,24,64,86,11,64,20,44,23,63,
                    11,26,10,84,75,13,93,39,16,67, 2,91,97,22,86,40,
                    69,11,40,58,93,22,82,30,24,40,58,26,75,70,52,20,
                    27,95,57,23,69, 9,30,82,87,70,42,32,90,67,36,92,
                    41,97,72,24, 3,36,60,96, 5,62,13,74,27,21,60,58,
                    90,17,49,27,70,29,59,48,72,30,35,11,21,60,99,35,
                    37,71, 9,84, 3,22,74,20,48,70,19,58,65,22,14,72,
                    15, 7,31,77,61, 5,31,60,24,80,33,58,49,78,80,37,
                    79,66,37,83, 4,21,50,65,96,23,67,89,44,17,58,60,
                    41,96,96,39,27,62,84,18,74,38,56, 9,72,70,32,62,
                    95, 6,87,51,96,36, 4, 3,79,21,21,31,66,93,13,10,
                    77,43,52,68,66,47,42,55,57,23,60,45,63, 3,86,96,
                    29,70,81,31, 3,48,38,91,34,69,85,18,95,93,96,85,
                    15,38,80,35,17,98,92,14,57,60,25,46,63,60,16,58,
                    25,48,73,59,40, 6,72,46,91,39,22,63,79,58,67,84,
                    33,52,78,52,26,21,61,49,78,77, 5,95,75,20,56,30,
                    43,67,75,33,84,10,14,60,21,98,14,31,81,97,49,64,
                    19,69,44, 3,68, 2,66,20,69,48,81,96,22,56,22,25,
                    27,60,59,36,10,45,81,39,46,97,54,49,42,78,89,26,
                    93,55,14,96,48,48,96,57,51,82,94,23,46,64,20,10,
                    56,19,63,41,77,17,26,68,47,37,97,84, 6,93,26,99,
                     1,11,84,12,79,74,34,85,25,48,92,69,68,44,59,35,
                    99,33,88,75,29,12,87,79,37,74,24,98, 4,68, 1,85,
                    43,31,60, 2,82,16,51,65,97, 4,82,42,52,82,56,58,
                    24,33,60,22,65,29,43,75,10,72,34,97,70,11,36,89,
                    26,69,84,26,50,17,42,83,44,63, 1,84,77,22,89,46,
                    72,79,93,22,94,34,79,48,68,55, 3,73,91,30,79,37,
                    76,19,24,61,41,98,32,12, 6,57,16,44,55,43,63,55,
                    98,11,68,17,50,67,26,86,19,60,14,56,30,59,11, 9,
                    41,26,59,39,56,49,48,82, 3,83,64,69,48,65,89,42,
                    78,33,25,91,92,50,91, 8,64,73,92,16,96,28,40,27,
                    67,22,69,95, 7,12,70,56,49,81,22,68,67,40,48,92,
                    43,14,86,60,49,39,74,58,42,43,54,37, 2,84,25,41,
                    22,22,65,16, 6,67,62,22,25,88,52,76,88,40,20,75,
                    84,24, 4,39,99,51,72,73,14,15,81,39,70,15,26,15,
                    32,34,83,33,73,95,14,55,91,65,81,44, 3,89,49,80,
                     5,38,56,42,76,68,14, 4,76,71,98,65,62,31, 6,96,
                    23,77,82, 4,59,91,29,14,91,42,80,35, 2,58,99,27,
                    40,64,43,86,74,17,58,68,24,71,51,73,35,74,63,50,
                    17,24, 5,83,71,12,62,33,19,31,84,41,25,71,75,41,
                    43,55,85,22,11,88,71,49,33,55,50,63,52,64,23,25,
                    42,85,47,49,30,65,42,95,61,15,86, 7,61,62,32,79,
                    62,82,13,84,30,69,21,70,22,99,95,71, 5,71,11,69,
                    39,85,79,89,41,94,82,86,46,83,96,80,48,74,63,56,
                     8,58,38,66,12,61,33,88,30,92,27,57, 0, 0,21,21,
                     1,10, 1, 0, 0, 0, 0, 0, 0] }

    it 'finds oxygen system at 20 steps from start' do
      droid.run(described_class::UNTIL_OXYGEN_FOUND)
      expect(droid.current_distance).to eq(20)
    end

    # TODO: chop into a smaller example, test part 2?
  end
end
